require 'open-uri'

lane :release do
  ensure_git_status_clean

  generate_dockerfiles
end

lane :release_direct do
  check_env

  docker_login
  docker_build(repository: 'fastlanetools/fastlane')
  docker_push
end

private_lane :check_env do
  %w[DOCKER_LOGIN_USER DOCKER_LOGIN_PASSWORD].each do |env|
    throw "Missing ENV var #{env}" unless ENV.include?(env)
  end
end

lane :generate_dockerfiles do
  ensure_git_branch(branch: 'master')

  template = ERB.new(File.read('../Dockerfile.erb'))
  list_of_tags = JSON.parse(open('https://registry.hub.docker.com/v1/repositories/circleci/ruby/tags').read)
  list_of_tags.map { |o| o['name'] }.each do |tag|
    result = template.result(binding)

    folder = 'generated'
    if tag == 'latest'
      switch_to_branch('master')
    else
      switch_to_branch("#{folder}/#{tag}")
    end

    Dir.chdir('..') do
      FileUtils.mkdir_p(folder)
      File.write(File.join(folder, 'Dockerfile'), result)
    end

    git_add(path: folder)
    if `git status` =~ /no changes added to commit|nothing to commit/i
      UI.success("No changes for #{tag}")
    else
      git_commit(
        message: "Update generated Dockerfile for #{tag}",
        path: 'generated'
      )
      add_git_tag(
        tag: tag
      )
    end

    switch_to_branch('master')
  end

  push_to_git_remote
end

def switch_to_branch(name)
  `git rev-parse --verify #{name}`
  if $?.success?
    `git checkout #{name}`
  else
    `git checkout -b #{name}`
  end
end
