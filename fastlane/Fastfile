require 'open-uri'

lane :release do
  ensure_git_status_clean
  check_env

  docker_login
  generate_dockerfiles
end

lane :release_direct do
  check_env

  docker_login
  docker_build(repository: 'fastlanetools/fastlane')
  docker_push
end

private_lane :check_env do
  %w[DOCKER_LOGIN_USER DOCKER_LOGIN_PASSWORD].each do |env|
    throw "Missing ENV var #{env}" unless ENV.include?(env)
  end
end

lane :generate_dockerfiles do
  template = ERB.new(File.read('../Dockerfile.erb'))
  list_of_tags = JSON.parse(open('https://registry.hub.docker.com/v1/repositories/circleci/ruby/tags').read)
  list_of_tags.map { |o| o['name'] }.each do |tag|
    result = template.result(binding)

    folder = "generated/#{tag}"
    folder = 'generated' if tag == 'latest'

    Dir.chdir('..') do
      FileUtils.mkdir_p(folder)
      File.write(File.join(folder, 'Dockerfile'), result)
    end

    git_add(path: folder)
    docker_build(
      repository: 'fastlanetools/fastlane',
      tag: tag,
      path: folder
    )
    docker_push(
      repository: 'fastlanetools/fastlane',
      tag: tag
    )
  end

  git_add(path: 'generated')
  if `git status` =~ /no changes added to commit|nothing to commit/i
    UI.success("No changes for #{tag}")
  else
    git_commit(message: 'Update generated Dockerfiles', path: 'generated')
  end
  push_to_git_remote
end
